// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 1. Model untuk Tabel Users
model User {
  id            String    @id @default(uuid())
  fullName      String    @map("full_name")
  email         String    @unique
  passwordHash  String    @map("password_hash")
  phoneNumber   String?   @map("phone_number")
  address       String?
  role          Role      @default(CUSTOMER)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  orders        Order[]

  @@map("users")
}

// 2. Model untuk Tabel Products
model Product {
  id             String        @id @default(uuid())
  name           String
  description    String?
  pricePerKg     Int           @map("price_per_kg")
  category       Category
  imageUrl       String?       @map("image_url")
  stockKg        Decimal       @db.Decimal(10, 2) @map("stock_kg")
  isActive       Boolean       @default(true) @map("is_active")
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  orderItems     OrderItem[]

  @@map("products")
}

// 3. Model untuk Tabel Orders
model Order {
  id                 String      @id @default(uuid())
  user               User        @relation(fields: [userId], references: [id])
  userId             String      @map("user_id")
  totalAmount        Int         @map("total_amount")
  status             OrderStatus @default(PENDING_PAYMENT)
  shippingAddress    String      @map("shipping_address")
  midtransOrderId    String      @unique @map("midtrans_order_id")
  midtransSnapToken  String?     @map("midtrans_snap_token")
  createdAt          DateTime    @default(now()) @map("created_at")
  updatedAt          DateTime    @updatedAt @map("updated_at")
  orderItems         OrderItem[]

  @@map("orders")
}

// 4. Model untuk Tabel OrderItems
model OrderItem {
  id               String   @id @default(uuid())
  order            Order    @relation(fields: [orderId], references: [id])
  orderId          String   @map("order_id")
  product          Product  @relation(fields: [productId], references: [id])
  productId        String   @map("product_id")
  quantityKg       Decimal  @db.Decimal(10, 2) @map("quantity_kg")
  priceAtPurchase  Int      @map("price_at_purchase")
  subtotal         Int

  @@map("order_items")
}


// ENUMs untuk tipe data kustom
enum Role {
  CUSTOMER
  ADMIN
}

enum Category {
  FRESH
  FROZEN
}

enum OrderStatus {
  PENDING_PAYMENT
  PAID
  PROCESSING
  SHIPPED
  COMPLETED
  CANCELLED
}